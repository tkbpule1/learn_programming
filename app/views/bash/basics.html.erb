<%= provide(:title, "Basics") %>

<div class="container">
  <div class="links">
    <%= link_to 'Bash Home', bash_path %>
  </div>
  <div class="links">
    <%= link_to 'Sha-Bang', bash_shabang_path %>
  </div>
  <div class="links">
    <%= link_to 'Invoke', bash_invoke_path %>
  </div>
  <div class="links">
    <%= link_to 'Administration', bash_admin_path %>
  </div>
</div>

<div class="container">
  <h3>
    Move to the beginning of the line: CTRL a
  </h3>
  <h3>
    Move to the end of the line: CTRL e
  </h3>
  <h3>
    Show previous command: CTRL p
  </h3>
  <h3>
    Show next command: CTRL n
  </h3>
  <h3>
    Search history: CTRL r + beginning of command (string)
  </h3>
  <h3>
    Press CTRL r to see previous commands that contain the string
  </h3>
<br>
<br>
<br>
  <h3>
    Create a Symbolic Link(ln -s) to a file/directory
  </h3>
  <div class="code">
    <span class='prompt'>[~]$ </span>ln -s filename linkname
  </div>
  <p>
    Example:
  </p>
  <div class="code">
    <span class='prompt'>[~]$ </span>ln -s ~/scripts/problems/log loglink
  </div>
<br>
<br>
  <h3>
    To see the last few lines of a file with retime update:(tail -f)
  </h3>
  <div class="code">
    <span class='prompt'>[~]$ </span>tail -f /var/log/dmesg
  </div>
<br>
<br>
  <h3>
    To shutdown/restart the system
  </h3>
<br>
  <div class="code">
    Shutdown:
<br>
    <span class='prompt'>[~]$ </span>poweroff
<br>
    <span class="prompt">[~]$ </span>init 0
<br>
    Poweroff in 60 minutes:
<br>
    <span class="prompt">[~]$ </span>shutdown -h +60
<br>
    Restart:
<br>
    <span class="prompt">[~]$ </span>init 6
<br>
    <span class="prompt">[~]$ </span>shutdown -r +60
  </div>
<br>
<br>
  <h3>
    See who is logged in:
  </h3>
<br>
  <div class="code">
    <span class='prompt'>[~]$ </span>w
  </div>
<br>
<br>
  <h3>
    See what processes are running:
  </h3>
<br>
  <div class="code">
    <span class='prompt'>[~]$ </span>htop
  </div>
<br>
<br>
  <h3>
    See network connections:
  </h3>
<br>
  <div class="code">
    <span class='prompt'>[~]$ </span>sudo netstat -tupln
  </div>
<br>
<br>
  <h3>
    Redirections:
  </h3>
  <p>
    First need to know this:
<br>
    STDIN --> 0;
<br>
    STDOUT --> 1;
<br>
    STDERR -->2;
  </p>
  <h2>
    Output
<br>
<br>
    Create/Overwrite a file:
  </h2>
  <div class="code">
    <span class='prompt'>[~]$ </span>echo "this should be in a file" > somefile.txt
  </div>

  <h2>
    Create/Append to a file:
  </h2>
  <div class="code">
    <span class='prompt'>[~]$ </span>echo "this should be in a file" >> somefile.txt
  </div>
  <h2>
    Create/Append to a file:
  </h2>
  <div class="code">
    <span class='prompt'>[~]$ </span>echo "this should be in a file" 1>> somefile.txt
  </div>
  <h2>
    Redirect error to file:
  </h2>
  <div class="code">
    <span class='prompt'>[~]$ </span>ls -asjklf 2>> err.txt
  </div>
  <h2>
    Input
  </h2>
  <div class="code">
    <span class='prompt'>[~]$ </span>mail -s "subject" ubuntu < message.txt
  </div>
<br>
<br>
  <h3>
    Pipes
  </h3>
  <div class="code">
    <span class="prompt">[~]$ </span>ps aux | uniq | sort | grep "some search"
  </div>
<br>
<br>
  <h3>
    Cut
  </h3>
  <div class="code">
    <span class="prompt">[~]$ </span>cat text.txt | cut -d : -f2
  </div>
  <p>
    This cuts the text at a delimiter (-d) equal to :, creating two fields (1 and 2), then outputs field 2 (-f2)<br>
    See ~/text.txt
  </p>
<br>
  <h3>
    Sort
  </h3>
  <div class="code">
    <span class="prompt">[~]$ </span>cat text.txt | sort -bf
  </div>
  <p>
    This sorts the text alphabetically by first letter ignoring leading white space (-b) and case (-f)<br>
    See ~/text.txt
  </p>
<br>
  <h3>
    Uniq
  </h3>
  <div class="code">
    <span class="prompt">[~]$ </span>cat text.txt | uniq
  </div>
  <p>
    This only prints unique lines of the file.<br>
    See ~/text.txt
  </p>
<br>
  <h3>
    Grep
  </h3>
  <div class="code">
    <span class="prompt">[~]$ </span>cat text.txt | grep love
  </div>
  <p>
    This searches for love and only prints the lines with love in them.<br>
    See ~/text.txt <br>
    Can also use alternative synatx: <br>
  </p>
  <div class="code">
    <span class="prompt">[~]$ </span>grep love text.txt
  </div>
  <div class="code">
    <span class="prompt">[~]$ </span>grep love ./*
  </div>
  <p>
    Prints the file names and lines of all files that contain love in this directory.
  </p>
<br>
  <h3>Search for programs</h3>
  <div class="code">
    <span class="prompt">[~]$ </span>apt-cache search editor
  </div>
  <p>
    This would print a list of programs with editor in the name or description.
  </p>
<br>
  <h3>UMASK</h3>
  <div class="code">
    <span class="prompt">[~]$ </span>vim /etc/login.defs
  </div>
  <p>
    Search for UMASK 022.<br>
    This is the default permissions settings.<br>
    0: grants all permissions <br>
    1: cannot execute <br>
    2: cannot write <br>
    3: cannot write or execute <br>
    4: cannot read <br>
    5: cannot read or execute <br>
    6: cannot read or write <br>
    7: cannot read, write, or execute
  </p>


</div>
